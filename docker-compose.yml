version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: svedprint-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - svedprint-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: svedprint-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - svedprint-network

  # Keycloak Authentication
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: svedprint-keycloak
    restart: unless-stopped
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: ${POSTGRES_USER:-postgres}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD:-password}
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_PROXY: edge
      KC_HEALTH_ENABLED: true
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && timeout 2 cat <&3 | grep -q 'status.*UP' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 90s
    networks:
      - svedprint-network

  # Svedprint Main Service
  svedprint:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: svedprint
    container_name: svedprint-main
    restart: unless-stopped
    environment:
      PORT: ${SVEDPRINT_PORT:-8001}
      DATABASE_URL: ${SVEDPRINT_DATABASE_URL}
      DATABASE_MAX_CONNS: ${SVEDPRINT_DATABASE_MAX_CONNS:-25}
      DATABASE_MAX_IDLE_CONNS: ${SVEDPRINT_DATABASE_MAX_IDLE_CONNS:-10}
      DATABASE_CONN_MAX_LIFETIME: ${SVEDPRINT_DATABASE_CONN_MAX_LIFETIME:-5m}
      REDIS_ADDR: ${REDIS_ADDR:-redis:6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      SERVICE_NAME: svedprint
      REDIS_DB: ${REDIS_DB:-0}
      REDIS_TTL: ${REDIS_TTL:-10m}
      GIN_MODE: ${GIN_MODE:-debug}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - svedprint-network

  # Svedprint Admin Service
  svedprint-admin:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: svedprint-admin
    container_name: svedprint-admin
    restart: unless-stopped
    environment:
      PORT: ${SVEDPRINT_ADMIN_PORT:-8002}
      DATABASE_URL: ${SVEDPRINT_ADMIN_DATABASE_URL}
      DATABASE_MAX_CONNS: ${SVEDPRINT_ADMIN_DATABASE_MAX_CONNS:-25}
      DATABASE_MAX_IDLE_CONNS: ${SVEDPRINT_ADMIN_DATABASE_MAX_IDLE_CONNS:-10}
      DATABASE_CONN_MAX_LIFETIME: ${SVEDPRINT_ADMIN_DATABASE_CONN_MAX_LIFETIME:-5m}
      SVEDPRINT_SERVICE_URL: ${SVEDPRINT_SERVICE_URL:-http://svedprint:8001}
      SERVICE_NAME: svedprint-admin
      GIN_MODE: ${GIN_MODE:-debug}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
      svedprint:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - svedprint-network

  # Svedprint Print Service (Stateless)
  svedprint-print:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: svedprint-print
    container_name: svedprint-print
    restart: unless-stopped
    environment:
      PORT: ${SVEDPRINT_PRINT_PORT:-8003}
      SVEDPRINT_SERVICE_URL: ${SVEDPRINT_SERVICE_URL:-http://svedprint:8001}
      SERVICE_NAME: svedprint-print
      GIN_MODE: ${GIN_MODE:-debug}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "8003:8003"
    depends_on:
      svedprint:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - svedprint-network

  # Gateway Service (Public-facing)
  gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: gateway
    container_name: svedprint-gateway
    restart: unless-stopped
    environment:
      PORT: ${GATEWAY_PORT:-8000}
      DATABASE_URL: ${GATEWAY_DATABASE_URL}
      DATABASE_MAX_CONNS: ${GATEWAY_DATABASE_MAX_CONNS:-25}
      DATABASE_MAX_IDLE_CONNS: ${GATEWAY_DATABASE_MAX_IDLE_CONNS:-10}
      DATABASE_CONN_MAX_LIFETIME: ${GATEWAY_DATABASE_CONN_MAX_LIFETIME:-5m}
      KEYCLOAK_URL: ${KEYCLOAK_URL:-http://keycloak:8080}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:-svedprint}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID:-svedprint-backend}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_JWKS_URL: ${KEYCLOAK_JWKS_URL}
      SVEDPRINT_SERVICE_URL: ${SVEDPRINT_SERVICE_URL:-http://svedprint:8001}
      SVEDPRINT_ADMIN_SERVICE_URL: ${SVEDPRINT_ADMIN_SERVICE_URL:-http://svedprint-admin:8002}
      SVEDPRINT_PRINT_SERVICE_URL: ${SVEDPRINT_PRINT_SERVICE_URL:-http://svedprint-print:8003}
      SERVICE_NAME: gateway
      GIN_MODE: ${GIN_MODE:-debug}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      svedprint:
        condition: service_healthy
      svedprint-admin:
        condition: service_healthy
      svedprint-print:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - svedprint-network

networks:
  svedprint-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
