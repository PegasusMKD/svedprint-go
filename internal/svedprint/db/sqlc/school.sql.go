// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: school.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getSchoolByUuid = `-- name: GetSchoolByUuid :one
select uuid, school_name, director_name, business_number, main_book, ministry, country, city from school
where uuid = $1
`

func (q *Queries) GetSchoolByUuid(ctx context.Context, schoolUuid pgtype.UUID) (School, error) {
	row := q.db.QueryRow(ctx, getSchoolByUuid, schoolUuid)
	var i School
	err := row.Scan(
		&i.Uuid,
		&i.SchoolName,
		&i.DirectorName,
		&i.BusinessNumber,
		&i.MainBook,
		&i.Ministry,
		&i.Country,
		&i.City,
	)
	return i, err
}

const insertSchool = `-- name: InsertSchool :one
insert into school (uuid, school_name)
values (gen_random_uuid(), $1)
returning uuid, school_name, director_name, business_number, main_book, ministry, country, city
`

func (q *Queries) InsertSchool(ctx context.Context, schoolName string) (School, error) {
	row := q.db.QueryRow(ctx, insertSchool, schoolName)
	var i School
	err := row.Scan(
		&i.Uuid,
		&i.SchoolName,
		&i.DirectorName,
		&i.BusinessNumber,
		&i.MainBook,
		&i.Ministry,
		&i.Country,
		&i.City,
	)
	return i, err
}

const updateSchool = `-- name: UpdateSchool :one
update school
set director_name = $1
where uuid = $2
returning uuid, school_name, director_name, business_number, main_book, ministry, country, city
`

type UpdateSchoolParams struct {
	DirectorName pgtype.Text
	SchoolUuid   pgtype.UUID
}

func (q *Queries) UpdateSchool(ctx context.Context, arg UpdateSchoolParams) (School, error) {
	row := q.db.QueryRow(ctx, updateSchool, arg.DirectorName, arg.SchoolUuid)
	var i School
	err := row.Scan(
		&i.Uuid,
		&i.SchoolName,
		&i.DirectorName,
		&i.BusinessNumber,
		&i.MainBook,
		&i.Ministry,
		&i.Country,
		&i.City,
	)
	return i, err
}
